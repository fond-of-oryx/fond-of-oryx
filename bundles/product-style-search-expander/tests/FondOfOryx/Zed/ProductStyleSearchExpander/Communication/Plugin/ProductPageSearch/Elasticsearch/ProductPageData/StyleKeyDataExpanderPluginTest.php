<?php

namespace FondOfOryx\Zed\ProductStyleSearchExpander\Communication\Plugin\ProductPageSearch\Elasticsearch\ProductPageData;

use Codeception\Test\Unit;
use Generated\Shared\Transfer\ProductPageSearchTransfer;
use PHPUnit\Framework\MockObject\MockObject;

class StyleKeyDataExpanderPluginTest extends Unit
{
    /**
     * @var \FondOfOryx\Zed\ProductStyleSearchExpander\Communication\Plugin\ProductPageSearch\Elasticsearch\ProductPageData\StyleKeyDataExpanderPlugin
     */
    protected StyleKeyDataExpanderPlugin $plugin;

    /**
     * @var \Generated\Shared\Transfer\ProductPageSearchTransfer|\PHPUnit\Framework\MockObject\MockObject
     */
    protected ProductPageSearchTransfer|MockObject $productAbstractPageSearchTransfer;

    /**
     * @return void
     */
    protected function _before()
    {
        parent::_before(); // TODO: Change the autogenerated stub

        $productAbstractPageSearchTransfer = $this->getMockBuilder(ProductPageSearchTransfer::class);

        /** @phpstan-ignore-next-line */
        if (method_exists($productAbstractPageSearchTransfer, 'setMethods')) {
            /** @phpstan-ignore-next-line */
            $productAbstractPageSearchTransfer->setMethods(['setStyleKey']);
        } else {
            /** @phpstan-ignore-next-line */
            $productAbstractPageSearchTransfer->onlyMethods(['setStyleKey'])->enableOriginalClone();
        }

        $this->productAbstractPageSearchTransfer = $productAbstractPageSearchTransfer->getMock();

        $this->plugin = new StyleKeyDataExpanderPlugin();
    }

    /**
     * @return void
     */
    public function testStyleKeyExpanderPluginTestSuccess(): void
    {
        $this->productAbstractPageSearchTransfer->expects($this->once())
            ->method('setStyleKey');

        $this->plugin->expandProductPageData([
            'attributes' => json_encode(['style_key' => 'test']),
        ], $this->productAbstractPageSearchTransfer);
    }

    /**
     * @return void
     */
    public function testStyleKeyExpanderPluginTestFailed(): void
    {
        $this->productAbstractPageSearchTransfer->expects($this->never())
            ->method('setStyleKey');

        $this->plugin->expandProductPageData([
            'attributes' => json_encode(['wrong_key' => 'test']),
        ], $this->productAbstractPageSearchTransfer);
    }
}
